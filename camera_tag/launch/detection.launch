<launch>
  <!-- Launch Camera Node-->
  <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
    <param name="camera_info_url" value="file:///home/minions/catkin_ws/src/camera_tag/config/head_camera.yaml" />
    <param name="video_device" value="/dev/video0" />
    <param name="image_width" value="640" />
    <param name="image_height" value="480" />
    <param name="pixel_format" value="yuyv" />
    <param name="camera_frame_id" value="usb_cam" />
    <param name="io_method" value="mmap"/>
    <param name="framerate" value="10" />
    
  </node>

  <!-- Arguments for apriltag detection node -->
  <arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->
  <arg name="node_namespace" default="apriltag_ros_continuous_node" />
  <arg name="camera_name" default="/usb_cam" />
  <arg name="image_topic" default="image_raw" />
  <arg name="image_rectified" default="image_flipped" />

  <!-- Set parameters -->
  <rosparam command="load" file="$(find camera_tag)/config/param.yaml" ns="$(arg node_namespace)" />
  <rosparam command="load" file="$(find camera_tag)/config/tag_size.yaml" ns="$(arg node_namespace)" />
  
  <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
    <!-- Remap topics from those used in code to those on the ROS network -->
    <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
    <remap from="camera_info" to="$(arg camera_name)/camera_info" />

    <param name="publish_tag_detections_image" type="bool" value="true" />      <!-- default: false -->
  </node>
  
  <!-- <node pkg="tf" type="static_transform_publisher" name="map2world" args="0 0 0 0 0 0 map world 100"/>
  <node pkg="tf" type="static_transform_publisher" name="cam2robot" args="0 0 0 0 -1.5708 -1.5708 usb_cam robot 100"/> -->
  
   
  <!-- launch apriltag localisation node -->
  <node pkg="camera_tag" type="final_script.py" name="camera_localise_node" output="screen"/>
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find camera_tag)/rviz/tag.rviz" />
</launch>
